<<<<<<< HEAD
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l')
xlim = c(min(pred), max(pred))
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'red', lty = 2)
xlim = c(min(pred), max(pred))
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l')
xlim = c(min(pred), max(pred))
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l')
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,3], col = 'red', lty = 2)
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l'xlim = c(min(pred), max(pred)))
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',xlim = c(min(pred), max(pred)))
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,3], col = 'red', lty = 2)
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',xlim = c(min(pred), max(pred)))
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,3], col = 'red', lty = 2)
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',xlim = c(min(pred), max(pred)))
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l')
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',ylim = c(min(pred), max(pred)))
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,3], col = 'red', lty = 2)
tmp_male=data.frame(clo=NA,tOut=seq(min(df2$tOut),max(df2$tOut),0.1),tInOp=mean(df2$tInOp),sex="male")
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',ylim = c(min(pred), max(pred)), xlab = 'clo')
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',ylim = c(min(pred), max(pred)), ylab = 'clo')
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',ylim = c(min(pred), max(pred)), ylab = 'clo', xlab = 'tOut')
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,3], col = 'red', lty = 2)
legend()
lines(tmp_male$tOut,pred[,3], col = 'green', lty = 2)
conf = predict(fit2,tmp_male,interval = 'confidence')
pred = predict(fit2, tmp_male,interval = 'prediction')
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',ylim = c(min(pred), max(pred)), ylab = 'clo', xlab = 'tOut')
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'green', lty = 2)
lines(tmp_male$tOut,pred[,3], col = 'green', lty = 2)
pred = predict(fit2, tmp_female,interval = 'prediction')
conf = predict(fit2,tmp_female,interval = 'confidence')
pred = predict(fit2, tmp_female,interval = 'prediction')
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',ylim = c(min(pred), max(pred)), ylab = 'clo', xlab = 'tOut')
lines(tmp_male$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_male$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_male$tOut,pred[,2], col = 'green', lty = 2)
conf = predict(fit2,tmp_female,interval = 'confidence')
pred = predict(fit2, tmp_female,interval = 'prediction')
plot(tmp_male$tOut, conf[,1], col = 'blue', type = 'l',ylim = c(min(pred), max(pred)), ylab = 'clo', xlab = 'tOut')
lines(tmp_female$tOut,conf[,2], col = 'red', lty = 2)
lines(tmp_female$tOut,conf[,3], col = 'red', lty = 2)
lines(tmp_female$tOut,pred[,2], col = 'green', lty = 2)
lines(tmp_female$tOut,pred[,3], col = 'green', lty = 2)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
x = c(71, 74, 82, 76, 91, 82, 82, 75, 79, 82, 72, 90)
sigma = sd(x)
sigma
#a) sketch whole data:
dnorm(x)
#a) sketch whole data:
dnorm(x, mean = mean(x), sigma)
#a) sketch whole data:
plot(dnorm(x, mean = mean(x), sigma))
#a) sketch whole data:
plot(dnorm(x, mean = mean(x), sigma))
#a) sketch whole data:
plot(x,dnorm(x, mean = mean(x), sigma))
mu = mean(x)
sigma = sd(x)
mu = mean(x)
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma), type )
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma, type = 'l' )
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma, type = 'l' )
sigma = sd(x)
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma, type = 'l' ))
sigma = sd(x)
mu = mean(x)
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma, type = 'l' ))
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma) type = 'l' )
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma), type = 'l' )
#a) sketch whole data:
plot(x,dnorm(x, mean = mu, sigma))
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, 100)
L  = sapply(theta, L.complete)
L.complete <- function(theta,y){
prod(dnorm(y,mean=theta[1],sd=sqrt(sigma2)))
}
L  = sapply(theta, L.complete)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, 100)
L  = sapply(theta, L.complete)
sigma2 = var(x)
mu = mean(x)
n = length(x)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, 100)
L.complete <- function(theta,y){
prod(dnorm(y,mean=theta[1],sd=sqrt(sigma2)))
}
L  = sapply(theta, L.complete)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, length =100)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
plot(theta,L/max(L), type = 'l')
plot(theta,L/max(L))
L.avg = sapply(theta, L.avg)
L.avg <- function(theta){
(dnorm(mu,mean=theta[1],sd=sqrt(sigma2/n)))
}
L.avg = sapply(theta, L.avg)
lines(theta, L.avg)
plot(theta,L/max(L))
lines(theta, L.avg)
x = c(71, 74, 82, 76, 91, 82, 82, 75, 79, 82, 72, 90)
sigma2 = var(x)
mu = mean(x)
n = length(x)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, length =100)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L.avg <- function(theta){
(dnorm(mu,mean=theta[1],sd=sqrt(sigma2/n)))
}
L.avg = sapply(theta, L.avg)
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
lines(theta, L.avg)
lines(theta, L.avg/max(L.avg))
x = c(71, 74, 82, 76, 91, 82, 82, 75, 79, 82, 72, 90)
sigma2 = var(x)
mu = mean(x)
n = length(x)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, length =100)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L.avg <- function(theta){
(dnorm(mu,mean=theta[1],sd=sqrt(sigma2/n)))
}
L.avg = sapply(theta, L.avg)
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
lines(theta, L.avg/max(L.avg))
x = c(71, 74, 82, 76, 91, 82, 82, 75, 79, 82, 72, 90)
sigma2 = var(x)
mu = mean(x)
n = length(x)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, length =100)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L.avg <- function(theta){
(dnorm(mu,mean=theta[1],sd=sqrt(sigma2/n)))
}
L.avg = sapply(theta, L.avg)
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
lines(theta, L.avg/max(L.avg), col = 'red')
x = c(71, 74, 82, 76, 91, 82, 82, 75, 79, 82, 72, 90)
sigma2 = var(x)
mu = mean(x)
n = length(x)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, length =1000)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L.avg <- function(theta){
(dnorm(mu,mean=theta[1],sd=sqrt(sigma2/n)))
}
L.avg = sapply(theta, L.avg)
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
lines(theta, L.avg/max(L.avg), col = 'red')
fit <- optim(c(1),fn = L.complete, hessian = T)
fit
fit <- optim(c(0.1),fn = L.complete, hessian = T)
L.complete <- function(theta){
-sum(dnorm(x,mean=theta[1],sd=sqrt(sigma2), log = T))
}
nll <- function(theta){
-sum(dnorm(x,mean=theta[1],sd=sqrt(sigma2), log = T))
}
fit <- optim(c(0.1),fn = nll, hessian = T, control = )
fit <- optim(c(1),fn = nll, hessian = T)
fit <- optim(c(0.1),fn = nll, hessian = T)
fit
fit$par
x = c(71, 74, 82, 76, 91, 82, 82, 75, 79, 82, 72, 90)
sigma2 = var(x)
mu = mean(x)
n = length(x)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, length =1000)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L.avg <- function(theta){
(dnorm(mu,mean=theta[1],sd=sqrt(sigma2/n)))
}
L.avg = sapply(theta, L.avg)
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
lines(theta, L.avg/max(L.avg), col = 'red')
nll <- function(theta){
-sum(dnorm(x,mean=theta[1],sd=sqrt(sigma2), log = T))
}
fit <- optim(c(0.1),fn = nll, hessian = T)
fit$par
fit <- optim(c(0.1),fn = nll, hessian = T, method  = 'Brent')
x = c(71, 74, 82, 76, 91, 82, 82, 75, 79, 82, 72, 90)
sigma2 = var(x)
mu = mean(x)
n = length(x)
#a) sketch whole data:
theta = seq(mu-3*sigma2, mu+3*sigma2, length =1000)
L.complete <- function(theta){
prod(dnorm(x,mean=theta[1],sd=sqrt(sigma2)))
}
L.avg <- function(theta){
(dnorm(mu,mean=theta[1],sd=sqrt(sigma2/n)))
}
L.avg = sapply(theta, L.avg)
L  = sapply(theta, L.complete)
plot(theta,L/max(L))
lines(theta, L.avg/max(L.avg), col = 'red')
nll <- function(theta){
-sum(dnorm(x,mean=theta[1],sd=sqrt(sigma2), log = T))
}
suppressWarnings(
fit <- optim(c(0.1),fn = nll, hessian = T))
fit$par
install.packages("tinytex")
library(tinytex)
tinytex::install_tinytex()
x = c(4, 6, 3, 7, 2, 4)
x = c(4, 6, 3, 7, 2, 4)
theta = seq(mean(x)-3*sd(x), mean(x)+3*sd(x), length= 200)
L.complete <- function(theta){
-sum(dpois(x, lambda = theta, log = T))
}
L = sapply(theta, L.complete)
plot(theta, L/max(L))
L
x = c(4, 6, 3, 7, 2, 4)
theta = seq(0, mean(x)+3*sd(x), length= 200)
L.complete <- function(theta){
-sum(dpois(x, lambda = theta, log = T))
}
L = sapply(theta, L.complete)
plot(theta, L/max(L))
lambda = seq(0, 10, by = 1)
x = c(4, 6, 3, 7, 2, 4)
lambda = seq(0, 10, by = 1)
L.complete <- function(lambda){
-sum(dpois(x, lambda , log = T))
}
L = sapply(lambda, L.complete)
plot(lambda, L/max(L))
lambda = seq(0, 100, by = 1)
x = c(4, 6, 3, 7, 2, 4)
lambda = seq(0, 100, by = 1)
L.complete <- function(lambda){
-sum(dpois(x, lambda , log = T))
}
L = sapply(lambda, L.complete)
plot(lambda, L/max(L))
x = c(4, 6, 3, 7, 2, 4)
lambda = seq(0, 100, by = 1)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
L = sapply(lambda, L.complete)
plot(lambda, L/max(L))
lambda = seq(0, 10, by = 1)
x = c(4, 6, 3, 7, 2, 4)
lambda = seq(0, 10, by = 1)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
L = sapply(lambda, L.complete)
plot(lambda, L/max(L))
plot(lambda, L)
x = c(4, 6, 3, 7, 2, 4)
lambda = seq(0, 10, by = 1)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
L = sapply(lambda, L.complete)
plot(lambda, L)
x = c(4, 6, 3, 7, 2, 4)
lambda = seq(0, 10, by = 1)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
L = sapply(lambda, L.complete)
plot(lambda, L)
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
L = sapply(lam, L.complete)
plot(lam, L)
plot(lam, L-max(L))
plot(lam, L-max(L), xlab = expression(lambda))
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
L.q <- function(lambda){
l(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
lam.hat = mean(x)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
plot(lam, L-max(L), xlab = expression(lambda))
lines(lam, Lq-max(Lq))
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
lam.hat = mean(x)
L.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
plot(lam, L-max(L), xlab = expression(lambda))
lines(lam, Lq-max(Lq), col = 'red')
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
lam.hat = mean(x)
l.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
l.q <- function(lambda){
l.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
l = sapply(lam, l.complete)
lq = sapply(lam, l.q)
plot(lam, l-max(l), xlab = expression(lambda))
lines(lam, lq-max(lq), col = 'red')
##Not on log-scale:
L.complete <- function(lambda){
prod(dpois(x, lambda ))
}
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
plot(lam, exp(L-max(L)), xlab = expression(lambda))
lines(lam, exp(Lq-max(Lq)), col = 'red')
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
lam.hat = mean(x)
l.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
l.q <- function(lambda){
l.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
l = sapply(lam, l.complete)
lq = sapply(lam, l.q)
plot(lam, l-max(l), xlab = expression(lambda))
lines(lam, lq-max(lq), col = 'red')
##Not on log-scale:
L.complete <- function(lambda){
prod(dpois(x, lambda ))
}
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
plot(lam, exp(L-max(L)), xlab = expression(lambda))
lines(lam, q-max(Lq), col = 'red')
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
lam.hat = mean(x)
l.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
l.q <- function(lambda){
l.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
l = sapply(lam, l.complete)
lq = sapply(lam, l.q)
plot(lam, l-max(l), xlab = expression(lambda))
lines(lam, lq-max(lq), col = 'red')
##Not on log-scale:
L.complete <- function(lambda){
prod(dpois(x, lambda ))
}
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
plot(lam, exp(L-max(L)), xlab = expression(lambda))
lines(lam, Lq-max(Lq), col = 'red')
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
lam.hat = mean(x)
l.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
l.q <- function(lambda){
l.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
l = sapply(lam, l.complete)
lq = sapply(lam, l.q)
plot(lam, l-max(l), xlab = expression(lambda))
lines(lam, lq-max(lq), col = 'red')
##Not on log-scale:
L.complete <- function(lambda){
prod(dpois(x, lambda ))
}
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, L.complete)
Lq = sapply(lam, L.q)
plot(lam, exp(L-max(L)), xlab = expression(lambda))
lines(lam, exp(Lq-max(Lq)), col = 'red')
x = c(4, 6, 3, 7, 2, 4)
lam = seq(2.3, 7.2, length = 100)
lam.hat = mean(x)
l.complete <- function(lambda){
sum(dpois(x, lambda , log = T))
}
#l'(lambda) = 0 da MLE! Derfor kun første og andet led af taylor expansion
l.q <- function(lambda){
l.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
l = sapply(lam, l.complete)
lq = sapply(lam, l.q)
plot(lam, l-max(l), xlab = expression(lambda))
lines(lam, lq-max(lq), col = 'red')
##Not on log-scale:
L.complete <- function(lambda){
prod(dpois(x, lambda ))
}
L.q <- function(lambda){
L.complete(lam.hat) - 0.5 * length(x)/lam.hat * (lambda - lam.hat)^2
}
L = sapply(lam, l.complete)
Lq = sapply(lam, l.q)
plot(lam, exp(L-max(L)), xlab = expression(lambda))
lines(lam, exp(Lq-max(Lq)), col = 'red')
=======
df1=read.csv(file="./Data/clothingFull.csv")
df1
df2=read.csv(file="./Data/clothingSum.csv")
df1
str(df1)
str(df2)
library(ggplot2)
library(knitr)
library(RColorBrewer)
library(tidyverse)
library(latex2exp)
View(df2)
View(df1)
test=df1%>%
group_by(day,subjId,sex)%>%
summarise(clo=mean(clo),tOut=mean(tOut),tInOp=mean(tInOp))
test==df2
View(test)
names(df2)
test=test[,names(df2)]
test==df2
which(test==df2,arr.ind = T)
test[which(test==df2,arr.ind = T)]
idx=which(test==df2,arr.ind = T)
test[idx[,1],idx[,2]]
idx=which(test!=df2,arr.ind = T)
idx
test[idx[,1],idx[,2]]
test[idx[,1],]
df2[idx[,1],]
test[idx[,1],]
idx=which(test!=df2,arr.ind = T)
test[idx[,1],]
head(test[idx[,1],])
head(df2[idx[,1],])
sample(1:3,1)
x=sample(1:3,size=1)
all=1:3
x=sample(1:3,size=1)
x=sample(1:3,size=1)
x=sample(all,size=1)
stay=c()
change=c()
stay=0
change=0
all=1:3
for(i in 1:10000){
x=sample(all,size=1)
y=all[all!=x]
if(length(y)>1){y=sample(y,1)}
if(x==1){stay=stay+1}else{change=change+1}
}
stay=0
change=0
all=1:3
n=10000
for(i in 1:n){
x=sample(all,size=1)
y=all[all!=x]
if(length(y)>1){y=sample(y,1)}
if(x==1){stay=stay+1}else{change=change+1}
}
stay/n
change/n
df1=read.csv(file="./Data/clothingFull.csv")
df2=read.csv(file="./Data/clothingSum.csv")
str(df1)
str(df2)
rm(list=ls())
library(ggplot2)
library(knitr)
library(RColorBrewer)
library(tidyverse)
library(latex2exp)
df1=read.csv(file="./Data/clothingFull.csv")
df2=read.csv(file="./Data/clothingSum.csv")
str(df1)
str(df2)
test=df1%>%
group_by(day,subjId,sex)%>%
summarise(clo=mean(clo),tOut=mean(tOut),tInOp=mean(tInOp))
test=test[,names(df2)]
idx=which(test!=df2,arr.ind = T)
head(test[idx[,1],])
head(df2[idx[,1],])
View(df2)
summary(df2)
ggplot(df2,aes(x=tInOp,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=tInOp))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=day,y=tOut))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=day,y=tOut))+geom_point()
df2$day=as.factor(df2$day)
df2$subjId=as.factor(df2$subjId)
ggplot(df2,aes(x=day,y=tOut))+geom_point()
ggplot(df2,aes(x=day,y=clo))+geom_point()
ggplot2(df2,aes(x=clo))+geom_histogram()+facet_wrap(~sex)
ggplot(df2,aes(x=clo))+geom_histogram()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut))+geom_histogram()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut))+geom_histogram()
ggplot(df2,aes(x=tInOp))+geom_histogram()
ggplot(df2,aes(x=tOut-tInop,y=clo))+geom_point()
ggplot(df2,aes(x=tOut-tInop,y=clo))+geom_point()+facet_wrat(~sex)
ggplot(df2,aes(x=tOut-tInop,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut-tInOp,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=tInOp))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=tInOp))+geom_point()
ggplot(df2,aes(x=tInOp,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tInOp,y=clo))+geom_point()+facet_wrap(~sex)
fit=lm(clo~ tOut*tInOp*sex,data=df2)
summary(fit)
names(df2)
str(df1)
names(df2)[5]
names(df2)[5]="tIn"
# We are removing the indoor and outdoor temperature interaction
fit2=lm(clo~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit3=lm(clo~ tOut+tIn+tIn*sex,data=df2)
summary(fit3)
fit4=lm(clo~ tOut+tIn+sex,data=df2)
summary(fit4)
resid(fit4)
hist(resid(fit4))
hist(resid(fit4),nclass=20)
fit3=lm(clo~ tOut+tIn+tIn*sex,data=df2)
summary(fit3)
summary(fit2)
fit3=lm(clo~ tOut+tIn+tIn*sex,data=df2)
summary(fit3)
hist(resid(fit3),nclass=20)
qqnorm(resid(fit3))
qqline(resid(fit3))
hist(resid(fit4),nclass=20)
qqnorm(resid(fit4))
qqline(resid(fit4))
library(lme4)
lrtest(fit4,fit3)
anova(fit4,fit3)
anova(fit4,fit3,test = 'LRT')
fit3=lm(clo~ tOut+tIn+tIn:sex+sex,data=df2)
summary(fit3)
anova(fit4,fit3,test = 'LRT')
x=-10:10
1/(1+exp(x))
1/(1+exp(-x))
log(seq(0,1,0.01)/(1-seq(0,1,0.01)))
df2$trans=log(df2$clo/(1-df2$clo))
ggplot(df2,aes(x=tOut,y=trans))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tIn,y=trans))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tIn,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tIn,y=trans))+geom_point()+facet_wrap(~sex)
# Backwards selection
fit1=lm(trans~ tOut*tIn*sex,data=df2)
summary(fit1)
# We are removing the indoor and outdoor temperature interaction
fit2=lm(trans~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit3=lm(clo~ tOut+tIn+tIn:sex+sex,data=df2)
summary(fit3)
hist(resid(fit3),nclass=20)
qqnorm(resid(fit3))
qqline(resid(fit3))
fit3=lm(trans~ tOut+tIn+tIn:sex+sex,data=df2)
summary(fit3)
hist(resid(fit3),nclass=20)
qqnorm(resid(fit3))
qqline(resid(fit3))
fit4=lm(trans~ tOut+tIn+sex,data=df2)
summary(fit4)
hist(resid(fit4),nclass=20)
qqnorm(resid(fit4))
qqline(resid(fit4))
fit2=lm(clo~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit3=lm(clo~ tOut+tIn+tIn:sex+sex,data=df2)
summary(fit3)
hist(resid(fit3),nclass=20)
qqnorm(resid(fit3))
qqline(resid(fit3))
fit4=lm(clo~ tOut+tIn+sex,data=df2)
summary(fit4)
hist(resid(fit4),nclass=20)
qqnorm(resid(fit4))
qqline(resid(fit4))
ggplot(df2,aes(x=tOut,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tIn,y=clo))+geom_point()+facet_wrap(~sex)
df2[df2$sex=="male",]
# Backwards selection
fit1=lm(clo~ tOut*tIn,data=df2[df2$sex=="male",])
summary(fit1)
fit1=lm(clo~ -1+tOut*tIn,data=df2[df2$sex=="male",])
summary(fit1)
# Backwards selection
fit1=lm(clo~ tOut*tIn,data=df2[df2$sex=="female",])
summary(fit1)
# Backwards selection
fit1=lm(clo~ -1+tOut*tIn,data=df2[df2$sex=="female",])
summary(fit1)
df2$resid_fit3=resid(fit3)
ggplot(df2,aes(x=resid_fit3))+geom_histogram()+facet_wrap(sex)
# Backwards selection
fit1=lm(clo~ tOut*tIn*sex,data=df2)
summary(fit1)
# We are removing the indoor and outdoor temperature interaction
fit2=lm(clo~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit2=lm(clo~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit3=lm(clo~ tOut+tIn+tIn:sex+sex,data=df2)
df2$resid_fit3=resid(fit3)
ggplot(df2,aes(x=resid_fit3))+geom_histogram()+facet_wrap(sex)
ggplot(df2,aes(x=resid_fit3))+geom_histogram()+facet_wrap(~sex)
ggplot(df2,aes(x=resid_fit3))+geom_qqnorm()+facet_wrap(~sex)
qqnorm(resid(fit3)[df2$sex=="male"])
qqline(resid(fit3)[df2$sex=="male"])
qqnorm(resid(fit3)[df2$sex=="female"])
qqline(resid(fit3)[df2$sex=="female"])
qqnorm(resid(fit3)[df2$sex=="male"])
qqline(resid(fit3)[df2$sex=="male"])
ggplot(df2,aes(x=resid_fit3))+geom_histogram()+facet_wrap(~sex)
qqnorm(resid(fit3)[df2$sex=="male"])
qqline(resid(fit3)[df2$sex=="male"])
qqnorm(resid(fit3)[df2$sex=="female"])
qqline(resid(fit3)[df2$sex=="female"])
ggplot(df2,aes(x=resid_fit3))+geom_histogram()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=tIn))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tIn,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut-tIn,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=tIn))+geom_point()
ggplot(df2,aes(x=tOut-tIn,y=clo))+geom_point()+facet_wrap(~sex)
# Backwards selection
fit1=lm(clo~ tOut*tIn,data=df2[df2$sex=="male",])
summary(fit1)
fit1=lm(clo~ -1+tOut*tIn,data=df2[df2$sex=="male",])
summary(fit1)
# Backwards selection
fit1=lm(clo~ tOut*tIn,data=df2[df2$sex=="female",])
summary(fit1)
fit1=lm(clo~ tOut+tIn,data=df2[df2$sex=="´female",])
fit1=lm(clo~ tOut+tIn,data=df2[df2$sex=="female",])
summary(fit1)
# Backwards selection
fitm1=lm(clo~ tOut*tIn,data=df2[df2$sex=="male",])
summary(fitm1)
fitm2=lm(clo~ -1+tOut*tIn,data=df2[df2$sex=="male",])
summary(fitm2)
# Backwards selection
fitf1=lm(clo~ tOut*tIn,data=df2[df2$sex=="female",])
summary(fitf1)
fitf2=lm(clo~ tOut+tIn,data=df2[df2$sex=="female",])
summary(fitf2)
fitm2
fitf2
hist(resid(fitm2))
qqnorm((resid(fitm2)))
qqline((resid(fitm2)))
hist(resid(fitf2))
qqnorm((resid(fitf2)))
qqline((resid(fitf2)))
summary(fitf1)
df2$diff=df2$tIn-df2$tOut
# Backwards selection
fit1=lm(clo~ diff*sex,data=df2)
summary(fit1)
# We are removing the indoor and outdoor temperature interaction
fit2=lm(clo~ diff+sex:diff,data=df2)
summary(fit2)
hist(resid(fit2),nclass=20)
qqnorm(resid(fit2)[df2$sex=="male"])
qqline(resid(fit2)[df2$sex=="male"])
qqnorm(resid(fit2)[df2$sex=="male"])
qqline(resid(fit2)[df2$sex=="male"])
qqnorm(resid(fit2)[df2$sex=="female"])
qqline(resid(fit2)[df2$sex=="female"])
qqnorm(resid(fit2))
qqline(resid(fit2))
ggplot(df2,aes(x=tOut,y=clo))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tIn,y=clo))+geom_point()+facet_wrap(~sex)
str(df2)
ggplot(df2,aes(x=tOut,y=clo,col=subjId))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tIn,y=clo,col=subjId))+geom_path()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=clo,col=subjId))+geom_point()+geom_path()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut-tIn,y=clo,col=subjId))+geom_point()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=tIn))+geom_point()+geom_path()
ggplot(df2,aes(x=tOut-tIn,y=clo,col=subjId))+geom_point()+geom_path()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut-tIn,y=clo,col=subjId))+geom_point()+geom_line()+facet_wrap(~sex)
ggplot(df2,aes(x=tOut,y=clo,col=subjId))+geom_point()+geom_line()+facet_wrap(~sex)
# Backwards selection
fit1=lm(trans~ tOut*tIn*sex,data=df2)
summary(fit1)
# We are removing the indoor and outdoor temperature interaction
fit2=lm(trans~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit3=lm(trans~ tOut+tIn+tIn:sex+sex,data=df2)
summary(fit3)
df2$resid_fit3=resid(fit3)
ggplot(df2,x=sex,y=resid_fit3)+geom_boxplot()
str(df2)
ggplot(df2,x=resid_fit3)+geom_boxplot()
df2$resid_fit3=resid(fit3)
df2$resid_fit3
ggplot(df2,x=resid_fit3)+geom_histogram()
ggplot(df2,aes(x=male,y=resid_fit3))+geom_boxplot()
ggplot(df2,aes(x=sex,y=resid_fit3))+geom_boxplot()
df2$sex
as.factor(df2$sex)
m=cbind(1,as.factor(df2$sex))
m
df3=read.csv(file="./Data/clothingSum.csv")
str(df3)
df3=df3[,3:6]
df3
df3=df3[-(1:nrow(df3)),]
df3
mean(df2$tIn)
tmp=data.frame(clo=NA,tOut=seq(min(df2$tOut),max(df2$tOut),0.1),tIn=mean(df2$tIn),sex="male")
tmp
tmp_male=data.frame(clo=NA,tOut=seq(min(df2$tOut),max(df2$tOut),0.1),tIn=mean(df2$tIn),sex="male")
m=cbind(1,0,df2$tOut,df2$tIn)
m
m[,2]
m[df2$sex=="male",2]=1
m
# Backwards selection
fit1=lm(clo~ tOut*tIn*sex,data=df2)
summary(fit1)
# We are removing the indoor and outdoor temperature interaction
fit2=lm(clo~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit2=lm(clo~ tOut+tIn+tOut*sex+tIn*sex,data=df2)
summary(fit2)
fit3=lm(clo~ tOut+tIn+tIn:sex+sex,data=df2)
df2$resid_fit3=resid(fit3)
ggplot(df2,aes(x=resid_fit3))+geom_histogram()+facet_wrap(~sex)
summary(fit3)
fit3$xlevels
fit3$contrasts
m=cbind(1,0,df2$tOut,df2$tIn,df2$tIn)
m[df2$sex=="male",2]=1
dim(m)
m[df2$sex=="female",5]
m[df2$sex=="female",5]=0
View(m)
solve(t(m)%*%m,t(m)%*%df2$clo)
theta=solve(t(m)%*%m,t(m)%*%df2$clo)
theta
fit3
theta
m[m[,2]==1]
m[m[,2]==1,]
m[m[,2]==1,]%*%theta
>>>>>>> 70cfe8e66ed8059f09234cf7dd2102d14fc9574c
